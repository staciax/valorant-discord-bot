[project]
name = "valorant-discord-bot-v4"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "discord-py>=2.5.2,<2.6.0",
    "requests>=2.32.3",
]

[dependency-groups]
dev = [
    "mypy>=1.15.0,<1.16.0",
    "ruff>=0.11.3,<0.12.0",
    "types-requests>=2.32.0",
]


[tool.mypy]
strict = true
python_version = "3.12"
exclude = [
    ".venv",
    # NOTE: just ignore for wait new version
    "utils", # ignore utils folder
    "cogs", # ignore utils folder
]

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [".git", ".ruff_cache", ".mypy_cache", ".venv", ".vscode"]

[tool.ruff.format]
preview = true
quote-style = "single"
skip-magic-trailing-comma = false

[tool.ruff.lint]
preview = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    # "D",  # pydocstyle 

    "YTT",   # flake8-2020
    "ANN",   # flake8-annotations
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "LOG",   # flake8l-ogging
    "G",     # flake8-logging-format
    "PIE",   # flake8-pie
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise 
    "RET",   # flake8-return
    "SIM",   # flake8-simplify
    "TC",    # flake8-type-checking
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib

    "PGH",  # pygrep-hooks
    "PL",   # pylint
    "TRY",  # tryceratops
    "FLY",  # flynt
    "PERF", # perflint
    "FURB", # refurb

    "RUF", # ruff-specific rules
]
ignore = [
    "ANN401", # any-type
    "COM812", # trailing-comma-missing
    "COM819", # prohibited-trailing-comma
    "E501",   # line-too-long, handled by black
    "ISC001", # single-line-implicit-string-concatenation, conflicts with black
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true
# runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
